{"version":3,"sources":["components/LoadingButton/index.js","helpers/custom-field/InputField/index.js","api/orderApi.js","actions/OrderAction.js","containers/CheckoutPage/components/OderItem/index.js","helpers/custom-field/SelectField/index.js","containers/CheckoutPage/index.js"],"names":["LoadingButton","className","InputField","props","type","placeholder","field","form","src","name","value","errors","touched","showError","alt","defaultProps","title","label","disable","orderApi","postOrder","order","url","URL_API","axiosClient","post","getOrders","get","removeOrder","id","delete","actionPostOrder","dispatch","a","res","actionGetOrders","GET_ORDERS_REQUEST","GET_ORDERS_SUCCESS","payload","data","orders","GET_ORDERS_FAIL","actionRemoveOrder","OderItem","product","qty","size","ConvertVnd","price","SelectField","options","onChangeFiled","onChange","e","target","setFieldValue","onChangeValue","map","option","index","CheckoutPage","useDispatch","cart","useSelector","state","user","JSON","parse","localStorage","getItem","history","useHistory","useState","dataCity","city","district","setDistrict","commune","setCommune","loading","setLoading","validationSchema","yup","shape","required","phone","address","result","find","huyen","xa","token","push","cartItems","length","initialValues","onSubmit","values","newCart","item","productId","prod_id","payablePrice","purchaseQty","cardId","town","fee","totalAmount","totalPrice","action","then","actionGetCart","toast","success","position","POSITION","TOP_RIGHT","catch","formikProps","component","onClick","handleSubmit"],"mappings":"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","file":"static/js/11.a09404f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './LoadingButton.scss'\r\nfunction LoadingButton() {\r\n  return (\r\n    <div className=\"loading-button\">\r\n      <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  title: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disable: PropTypes.bool,\r\n  src: PropTypes.string\r\n}\r\nInputField.defaultProps = {\r\n  type: 'text',\r\n  title: '',\r\n  label: '',\r\n  placeholder: '',\r\n  disable: false\r\n};\r\nfunction InputField(props) {\r\n  const { type, placeholder, field, form, src } = props\r\n  const { name, value } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n  return (\r\n    <div className=\"form__field\">\r\n      <div className=\"form__group\">\r\n        <img src={src} alt=\"\" />\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          {...field}\r\n        />\r\n      </div>\r\n      {\r\n        showError ?\r\n          (<div className=\"form__error\">{errors[name]}</div>) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n","import { URL_API } from \"../constants\"\r\nimport axiosClient from \"../services/axios\"\r\n\r\n\r\n\r\nconst orderApi = {\r\n  postOrder: (order) => {\r\n    const url = `${URL_API}/order/create`\r\n    return axiosClient.post(url, order)\r\n  },\r\n  getOrders: () => {\r\n    const url = `${URL_API}/order`\r\n    return axiosClient.get(url)\r\n  },\r\n  removeOrder: (id) => {\r\n    const url = `${URL_API}/order/${id}`\r\n    return axiosClient.delete(url)\r\n  }\r\n}\r\nexport default orderApi","import orderApi from \"../api/orderApi\"\r\nimport { GET_ORDERS_FAIL, GET_ORDERS_REQUEST, GET_ORDERS_SUCCESS } from \"../constants/orderConstants\"\r\n\r\n\r\n\r\nexport const actionPostOrder = (order) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await orderApi.postOrder(order)\r\n      return res\r\n    }\r\n    catch (err) {\r\n      return err\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionGetOrders = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: GET_ORDERS_REQUEST })\r\n    try {\r\n      const res = await orderApi.getOrders()\r\n      dispatch({ type: GET_ORDERS_SUCCESS, payload: res.data.orders })\r\n      return res\r\n    }\r\n    catch (err) {\r\n      dispatch({ type: GET_ORDERS_FAIL })\r\n      return err\r\n    }\r\n  }\r\n}\r\n\r\nexport const actionRemoveOrder = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await orderApi.removeOrder(id)\r\n      return res\r\n    }\r\n    catch (err) {\r\n\r\n    }\r\n  }\r\n}","import React from 'react'\r\nimport ConvertVnd from '../../../../utils/convertVnd'\r\n\r\nfunction OderItem({ product }) {\r\n  return (\r\n    <li className=\"order-list__item order-list__item--price\">\r\n      <span>{product.title}  ×\r\n        <span className=\"quantity\">{product.qty}</span>\r\n        <span className=\"size\">Size : {product.size}</span>\r\n      </span>\r\n      <span>{ConvertVnd((product.price * product.qty))}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default OderItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  title: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disable: PropTypes.bool,\r\n  src: PropTypes.string,\r\n  options: PropTypes.array\r\n}\r\nSelectField.defaultProps = {\r\n  type: 'text',\r\n  title: '',\r\n  label: '',\r\n  placeholder: '',\r\n  disable: false,\r\n  options: []\r\n};\r\nfunction SelectField(props) {\r\n  const { placeholder, field, form, options, onChangeFiled } = props\r\n  const { name, value } = field\r\n  const { errors, touched } = form\r\n  const showError = errors[name] && touched[name]\r\n  const onChangeValue = (e) => {\r\n    const { name, value } = e.target\r\n    form.setFieldValue(name, value)\r\n    if (name === 'city') {\r\n      onChangeFiled(e)\r\n      form.setFieldValue('district', '')\r\n    }\r\n    if (name === 'district') {\r\n      onChangeFiled(e)\r\n      form.setFieldValue('commune', '')\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"form__field\">\r\n      <div className=\"form__group\">\r\n        <select\r\n          name={name}\r\n          value={value}\r\n          {...field}\r\n          onChange={(e) => onChangeValue(e)}\r\n        >\r\n          <option value=\"\">\r\n            {placeholder}\r\n          </option>\r\n          {\r\n            options.map((option, index) => {\r\n              return (\r\n                <option\r\n                  value={option.name}\r\n                  key={index}\r\n                >\r\n                  {option.name}\r\n                </option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n      </div>\r\n      {\r\n        showError ?\r\n          (<div className=\"form__error\">{errors[name]}</div>) : null\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default SelectField\r\n","import React, { useState } from 'react'\r\nimport './CheckoutPage.scss'\r\nimport { FastField, Form, Formik, Field } from 'formik';\r\nimport * as yup from 'yup';\r\nimport InputField from '../../helpers/custom-field/InputField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OderItem from './components/OderItem';\r\nimport ConvertVnd from '../../utils/convertVnd';\r\nimport SelectField from '../../helpers/custom-field/SelectField';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { actionPostOrder } from '../../actions/OrderAction';\r\nimport dataCity from '../../data.json'\r\n\r\n// Toast\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { actionGetCart } from '../../actions/cartAction';\r\nimport LoadingButton from '../../components/LoadingButton';\r\nfunction CheckoutPage() {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector(state => state.cart)\r\n  const user = JSON.parse(localStorage.getItem('userInfo'))\r\n  const history = useHistory()\r\n  const [city, setCity] = useState(dataCity)\r\n  const [district, setDistrict] = useState([])\r\n  const [commune, setCommune] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    city: 'Tiền Giang',\r\n    district: '',\r\n    address: '',\r\n    commune: ''\r\n  }\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string()\r\n      .required('Vui lòng nhập họ và tên '),\r\n    phone: yup.number()\r\n      .required('Vui lòng nhập số điện thoại '),\r\n    city: yup.string()\r\n      .required('Vui lòng nhập thành phố'),\r\n    district: yup.string()\r\n      .required('Vui lòng nhập huyện'),\r\n    commune: yup.string()\r\n      .required('Vui lòng nhập xã'),\r\n    address: yup.string()\r\n      .required('Vui lòng nhập địa chỉ')\r\n  })\r\n  const onChangeFiled = (e) => {\r\n    const { name, value } = e.target\r\n    if (name === 'city') {\r\n      const result = city.find((city) => {\r\n        return city.name === value\r\n      })\r\n      if (result) {\r\n        setDistrict(result.huyen)\r\n      }\r\n    }\r\n    if (name === 'district') {\r\n      const result = district.find((district) => {\r\n        return district.name === value\r\n      })\r\n      if (result) {\r\n        setCommune(result.xa)\r\n      }\r\n    }\r\n  }\r\n  if (!user || (user && !user.token)) {\r\n    history.push('/dang-nhap')\r\n    return null\r\n  }\r\n  if (!cart.cartItems.length) {\r\n    return <div className=\"padding\"></div>\r\n  }\r\n  return (\r\n    <div className=\"checkout\">\r\n      <div className=\"container\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => {\r\n            const { name, phone, city, district, address } = values\r\n            const newCart = cart.cartItems.map((item) => {\r\n              return {\r\n                productId: item.prod_id,\r\n                payablePrice: item.price,\r\n                purchaseQty: item.qty\r\n              }\r\n            })\r\n            const order = {\r\n              cardId: cart.id,\r\n              cart: newCart,\r\n              name,\r\n              phone,\r\n              city,\r\n              town: district,\r\n              address,\r\n              fee: 30000,\r\n              totalAmount: cart.totalPrice\r\n            }\r\n            const action = actionPostOrder(order)\r\n            setLoading(true)\r\n            dispatch(action)\r\n              .then(() => {\r\n                setLoading(false)\r\n                history.push('/lich-su-don-hang')\r\n                const action = actionGetCart()\r\n                dispatch(action)\r\n                toast.success(\"Bạn đã đặt hàng thành công\", {\r\n                  position: toast.POSITION.TOP_RIGHT\r\n                })\r\n              })\r\n              .catch(() => {\r\n                setLoading(false)\r\n              })\r\n          }}\r\n\r\n        >\r\n          {\r\n            formikProps => {\r\n              return (\r\n                <div className=\"checkout__content\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xl-6\">\r\n                      <Form className=\"checkout-form\">\r\n                        <div className=\"checkout-form__title\">\r\n                          Thanh toán và giao hàng\r\n                        </div>\r\n                        <FastField\r\n                          type='text'\r\n                          component={InputField}\r\n                          name=\"name\"\r\n                          placeholder=\"Họ và tên\"\r\n                        />\r\n                        <FastField\r\n                          type='number'\r\n                          component={InputField}\r\n                          name=\"phone\"\r\n                          placeholder=\"Số điện thoại\"\r\n                        />\r\n                        <Field\r\n                          component={SelectField}\r\n                          name=\"city\"\r\n                          placeholder=\"Thành phố\"\r\n                          options={city}\r\n                          onChangeFiled={onChangeFiled}\r\n                        />\r\n                        <Field\r\n                          component={SelectField}\r\n                          name=\"district\"\r\n                          placeholder=\" Quận/Huyện\"\r\n                          options={district}\r\n                          onChangeFiled={onChangeFiled}\r\n                        />\r\n                        <Field\r\n                          component={SelectField}\r\n                          name=\"commune\"\r\n                          placeholder=\" Xã\"\r\n                          options={commune}\r\n                          onChangeFiled={onChangeFiled}\r\n                        />\r\n                        <FastField\r\n                          type='text'\r\n                          component={InputField}\r\n                          name=\"address\"\r\n                          placeholder=\"Địa chỉ\"\r\n                        />\r\n                      </Form>\r\n                    </div>\r\n                    <div className=\"col-xl-6\">\r\n                      <div className=\"checkout-order\">\r\n                        <h2 className=\"checkout-order__title\">\r\n                          Đơn hàng của bạn\r\n                        </h2>\r\n                        <ul className=\"order-list\">\r\n                          <li className=\"order-list__item\">\r\n                            <span>Sản phẩm</span>\r\n                            <span>Tạm tính</span>\r\n                          </li>\r\n                          {cart.cartItems.map((product, index) => {\r\n                            return (\r\n                              <OderItem\r\n                                product={product}\r\n                                key={index}\r\n                              />\r\n                            )\r\n                          })}\r\n                          <li className=\"order-list__item\">\r\n                            <span>Tạm tính</span>\r\n                            <span>{ConvertVnd(cart.totalPrice)}</span>\r\n                          </li>\r\n                          <li className=\"order-list__item\">\r\n                            <span>Giao hàng</span>\r\n                            <span>{ConvertVnd(30000)}</span>\r\n                          </li>\r\n                          <li className=\"order-list__item\">\r\n                            <span>Tổng</span>\r\n                            <span>{ConvertVnd(cart.totalPrice + 30000)}</span>\r\n                          </li>\r\n                        </ul>\r\n                        <div className=\"checkout-button\">\r\n                          {\r\n                            !loading ?\r\n                              <button type=\"submit\"\r\n                                onClick={() => formikProps.handleSubmit()}\r\n                              >\r\n                                Thanh toán khi nhận hàng\r\n                          </button> :\r\n                              <LoadingButton />\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n          }\r\n        </Formik >\r\n      </div >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default CheckoutPage\r\n"],"sourceRoot":""}