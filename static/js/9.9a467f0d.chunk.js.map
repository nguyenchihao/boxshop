{"version":3,"sources":["components/LoadingButton/index.js","containers/RegisterPage/index.js"],"names":["LoadingButton","className","RegisterPage","history","useHistory","dispatch","useDispatch","useState","loading","setLoading","validationSchema","yup","shape","firstName","required","lastName","email","password","min","max","confirmPassword","oneOf","initialValues","onSubmit","values","a","action","actionSignup","then","actionGetCart","push","toast","success","position","POSITION","TOP_RIGHT","catch","err","error","formikProps","type","component","InputField","name","placeholder","src","to"],"mappings":"uHAUeA,IARf,WACE,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,eAAf,UAA8B,wBAAW,wBAAW,wBAAW,+B,oOCoHtDC,UA7GM,WACnB,IAAMC,EAAUC,cACVC,EAAWC,cAFQ,EAGKC,oBAAS,GAHd,mBAGlBC,EAHkB,KAGTC,EAHS,KAWnBC,EAAmBC,MAAaC,MAAM,CAC1CC,UAAWF,MACRG,SAAS,kCACZC,SAAUJ,MACPG,SAAS,iCACZE,MAAOL,MACJG,SAAS,+BACTE,MAAM,mCACTC,SAAUN,MACPG,SAAS,4CACTI,IAAI,EAAG,0EACPC,IAAI,GAAI,2DACXC,gBAAiBT,MACdU,MAAM,CAACV,IAAQ,YAAa,MAAO,oDAGxC,OACE,cAAE,IAAF,CACEW,cAzBkB,CACpBT,UAAW,GACXE,SAAU,GACVC,MAAO,GACPC,SAAU,GACVG,gBAAiB,IAqBfV,iBAAkBA,EAClBa,SAAQ,uCAAE,WAAOC,GAAP,eAAAC,EAAA,sDACFC,EAASC,YAAaH,GAC5Bf,GAAW,GACXJ,EAASqB,GACNE,MAAK,WACJ,IAAMF,EAASG,cACfpB,GAAW,GACXN,EAAQ2B,KAAK,YACbC,IAAMC,QAAQ,wCAAsB,CAClCC,SAAUF,IAAMG,SAASC,YAE3B9B,EAASqB,MAEVU,OAAM,SAACC,GACN5B,GAAW,GACXsB,IAAMO,MAAMD,EAAK,CACfJ,SAAUF,IAAMG,SAASC,eAhBvB,2CAAF,sDAHV,SAwBG,SAAAI,GACC,OACE,qBAAKtC,UAAU,QAAf,SACE,eAAC,IAAD,CAAMA,UAAU,aAAhB,UACE,cAAC,IAAD,CACEuC,KAAK,OACLC,UAAWC,IACXC,KAAK,YACLC,YAAY,aACZC,IAAI,sBAEN,cAAC,IAAD,CACEL,KAAK,OACLC,UAAWC,IACXC,KAAK,WACLC,YAAY,YACZC,IAAI,sBAEN,cAAC,IAAD,CACEL,KAAK,QACLC,UAAWC,IACXC,KAAK,QACLC,YAAY,QACZC,IAAI,uBAEN,cAAC,IAAD,CACEL,KAAK,WACLC,UAAWC,IACXC,KAAK,WACLC,YAAY,WACZC,IAAI,0BAEN,cAAC,IAAD,CACEL,KAAK,WACLC,UAAWC,IACXC,KAAK,kBACLC,YAAY,mBACZC,IAAI,0BAEN,qBAAK5C,UAAU,8CAAf,SAEIO,EAAU,cAAC,IAAD,IAAoB,wBAAQgC,KAAK,SAAb,oCAIlC,qBAAKvC,UAAU,wBAAf,SACE,kFAA4B,cAAC,IAAD,CAAM6C,GAAG,aAAT","file":"static/js/9.9a467f0d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './LoadingButton.scss'\r\nfunction LoadingButton() {\r\n  return (\r\n    <div className=\"loading-button\">\r\n      <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingButton\r\n","import React, { useState } from 'react'\r\nimport './Register.scss'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FastField, Form, Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionSignup } from '../../actions/userAction';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport InputField from '../../helpers/custom-field/InputField';\r\nimport LoadingButton from '../../components/LoadingButton';\r\nimport { actionGetCart } from '../../actions/cartAction';\r\nconst RegisterPage = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const initialValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  }\r\n  const validationSchema = yup.object().shape({\r\n    firstName: yup.string()\r\n      .required('Vui lòng nhập họ '),\r\n    lastName: yup.string()\r\n      .required('Vui lòng nhập tên '),\r\n    email: yup.string()\r\n      .required('Vui lòng nhập email')\r\n      .email('Email không hợp lệ'),\r\n    password: yup.string()\r\n      .required('Vui lòng nhập mật khẩu')\r\n      .min(8, \"Mật khẩu phải chứa ít nhất 8 kí tự\")\r\n      .max(24, 'Mật khẩu tối thiếu 24 kí tự'),\r\n    confirmPassword: yup.string()\r\n      .oneOf([yup.ref('password'), null], 'Mật khảu không trùng khơp')\r\n  })\r\n\r\n  return (\r\n    < Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values) => {\r\n        const action = actionSignup(values)\r\n        setLoading(true)\r\n        dispatch(action)\r\n          .then(() => {\r\n            const action = actionGetCart()\r\n            setLoading(false)\r\n            history.push('/boxshop')\r\n            toast.success(\"Đăng ký thành công\", {\r\n              position: toast.POSITION.TOP_RIGHT\r\n            })\r\n            dispatch(action)\r\n          })\r\n          .catch((err) => {\r\n            setLoading(false)\r\n            toast.error(err, {\r\n              position: toast.POSITION.TOP_RIGHT\r\n            })\r\n          })\r\n      }}\r\n    >\r\n      {formikProps => {\r\n        return (\r\n          <div className=\"login\">\r\n            <Form className=\"login-form\">\r\n              <FastField\r\n                type='text'\r\n                component={InputField}\r\n                name=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                src=\"./images/user.svg\"\r\n              />\r\n              <FastField\r\n                type='text'\r\n                component={InputField}\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                src=\"./images/user.svg\"\r\n              />\r\n              <FastField\r\n                type='email'\r\n                component={InputField}\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                src=\"./images/email.png\"\r\n              />\r\n              <FastField\r\n                type='password'\r\n                component={InputField}\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                src=\"./images/password.png\"\r\n              />\r\n              <FastField\r\n                type='password'\r\n                component={InputField}\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                src=\"./images/password.png\"\r\n              />\r\n              <div className=\"login-form__group login-form__group--button\">\r\n                {\r\n                  loading ? <LoadingButton /> : <button type=\"submit\">Đăng ký</button>\r\n                }\r\n\r\n              </div>\r\n              <div className=\"login-form__recommend\">\r\n                <span>Bạn đã có tài khoản ? <Link to=\"/dang-nhap\">Đăng nhập</Link></span>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )\r\n      }}\r\n    </Formik >\r\n  )\r\n\r\n}\r\n\r\nexport default RegisterPage\r\n"],"sourceRoot":""}